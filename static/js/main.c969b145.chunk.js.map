{"version":3,"sources":["components/Header.jsx","pages/Home.js","components/ModelTable.jsx","components/StripedDataGrid.jsx","components/LabelTable.jsx","pages/ModelResults.js","pages/NotFound.js","components/BasicEmbed.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","AppBar","position","className","Tabs","sx","fontFamily","textColor","variant","Tab","label","component","Link","to","react_router_dist","DataItem","_ref","text","Grid","item","xs","sm","Home","container","spacing","md","columns","src","alt","Home_DataItem","StripedDataGrid","styled","DataGrid","_ref2","Object","objectDestructuringEmpty","defineProperty","concat","gridClasses","row","backgroundColor","&:hover, &.Mui-hovered","@media (hover: none)","projectSummaries","i","ModelScores","count","push","entries","field","hide","headerName","minWidth","flex","type","editable","ModelTable","components_StripedDataGrid","hideFooter","autoHeight","rows","density","getRowClassName","params","indexRelativeToCurrentPage","labelSummaries","LabelScores","LabelTable","ModelResults","components_ModelTable","components_LabelTable","NotFound","tableau","window","BasicEmbed","ref","useRef","url","useEffect","Viz","current","ReactDOM","createRoot","document","getElementById","render","StrictMode","dist","basename","components_Header","path","element","pages_Home","src_pages_ModelResults","components_BasicEmbed","pages_NotFound"],"mappings":"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","file":"static/js/main.c969b145.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Outlet, Link } from 'react-router-dom';\r\n\r\nimport { Tabs, Tab, AppBar } from '@mui/material';\r\n\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n  <>\r\n    <AppBar position=\"static\">\r\n      <div className=\"header-text\">WPI - Wildlife Crime MQP (2023)</div>\r\n      <Tabs\r\n        sx={{ fontFamily: 'Roboto'}}\r\n        textColor=\"white\"\r\n        variant=\"fullWidth\"\r\n      >\r\n        <Tab label=\"Home\" component={Link} to=\"/\" />\r\n        <Tab label=\"Model Results\"  component={Link} to=\"/users\" />\r\n        <Tab label=\"Tableau Data\" component={Link} to=\"/about\" />\r\n      </Tabs>\r\n    </AppBar>\r\n    <Outlet />\r\n  </>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport { Grid, Typography } from '@mui/material';\r\nimport './Home.css';\r\n\r\nconst DataItem = ({ text }) => (\r\n  <Grid item xs={3} sm={4}>\r\n    <div className=\"data-text\">\r\n      <p>{text}</p>\r\n    </div>\r\n  </Grid>\r\n);\r\n\r\nfunction Home() {\r\n  return (\r\n    <main className=\"global-padding\">\r\n      {/* Home Section - Header */}\r\n      <div className=\"home-section\">\r\n        <Grid container spacing={{ xs: 2, md: 3 }} columns={{ sm: 8, md: 12 }} className=\"grid-format\">\r\n          <Grid item xs={5} sm={6}>\r\n            <div className=\"title\">\r\n              <h1 className=\"title-hero\">What is Wildlife Crime?</h1>\r\n              <p>\r\n              Wildlife Crime is the illegal trade of animals and \r\n              plants, which threatens the survival of many species \r\n              and undermines the efforts of conservationists worldwide. This project\r\n              aims to quantify the extent of Wildlife Crime through the use of \r\n              Natural Language Processing (NLP) on publicly available news articles, \r\n              and to provide a platform to visualize this data for use by domain experts.\r\n              </p>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={5} sm={6}>\r\n            <img\r\n              src=\"./Elephas_maximus_(Bandipur).jpg\"\r\n              alt= \"Indian Elephant\"\r\n              className=\"elephant-img\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      {/* Home Section - Columns */}\r\n      <div className=\"data-section\">\r\n        <h2 className=\"data-hero\">Data At a Glance</h2>\r\n        <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }} className=\"grid-format\">\r\n          <DataItem text={\"15 Labels used for Classification\"} />\r\n          <DataItem text={\"Over 5000 Unique Tokens Extracted\"} />\r\n          <DataItem text={\"Over 300 Documents Annotated\"} />\r\n          <DataItem text={\"Data sourced from over 23 News Sources\"} />\r\n          <DataItem text={\"XXX Poached Species/Products Identified\"} />\r\n          <DataItem text={\"Crimes Identified across All 28 States and 8 Union Territories of India\"} />\r\n        </Grid>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport ModelScores from \"../static/model-scores.json\";\r\nimport StripedDataGrid from \"./StripedDataGrid.jsx\"\r\n\r\nimport \"./Table.css\";\r\n\r\n// Load Project Summary Data from JSON\r\n// NOTE: Data wants an ID for some reason\r\nconst projectSummaries = []\r\n\r\nfor (let i = 0; i < ModelScores.count; i++) {\r\n    projectSummaries.push(ModelScores.entries[i])\r\n}\r\n\r\nconst columns = [\r\n    { field: 'id', hide: true},\r\n    {\r\n        field: 'model',\r\n        headerName: 'Model',\r\n        minWidth: 200,\r\n        flex: 1,\r\n        type: 'number',\r\n        editable: false\r\n    },\r\n    {\r\n        field: 'f1-score',\r\n        headerName: 'Mean F1-Score',\r\n        minWidth: 50,\r\n        flex: 1,\r\n        type: 'number',\r\n        editable: false\r\n    },\r\n    {\r\n        field: 'standard-error',\r\n        headerName: 'Standard Error',\r\n        minWidth: 90,\r\n        flex: 1,\r\n        type: 'number',\r\n        editable: false\r\n    },\r\n    {\r\n        field: 'lb-ci',\r\n        headerName: 'Lower Bound (95% CI)',\r\n        minWidth: 90,\r\n        flex: 1,\r\n        type: 'number',\r\n        editable: false\r\n    },\r\n    {\r\n        field: 'ub-ci',\r\n        headerName: 'Upper Bound (95% CI)',\r\n        minWidth: 90,\r\n        flex: 1,\r\n        type: 'number',\r\n        editable: false\r\n    }\r\n];\r\n\r\nconst ModelTable = () => {\r\n  return (\r\n    <div className='global-padding'>\r\n        <StripedDataGrid \r\n        hideFooter\r\n        autoHeight={true}\r\n        rows={projectSummaries}\r\n        columns={columns}\r\n        density=\"standard\"\r\n        getRowClassName={(params) =>\r\n            params.indexRelativeToCurrentPage % 2 === 0 ? 'even' : 'odd'\r\n        }\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModelTable;","import { DataGrid, gridClasses } from '@mui/x-data-grid';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst StripedDataGrid = styled(DataGrid)(({}) => ({\r\n  [`& .${gridClasses.row}.odd`]: {\r\n    backgroundColor: '#ecebeb',\r\n    '&:hover, &.Mui-hovered': {\r\n      backgroundColor: 'lightblue',\r\n      '@media (hover: none)': {\r\n          backgroundColor: 'tranparent',\r\n          },\r\n      },\r\n  },\r\n    [`& .${gridClasses.row}.even`]: {\r\n      backgroundColor: 'white',\r\n      '&:hover, &.Mui-hovered': {\r\n        backgroundColor: 'lightblue',\r\n        '@media (hover: none)': {\r\n          backgroundColor: 'tranparent',\r\n          },\r\n      },\r\n  }\r\n}));\r\n\r\nexport default StripedDataGrid;\r\n\r\n","import React from 'react';\r\n\r\nimport LabelScores from \"../static/label-scores.json\";\r\nimport StripedDataGrid from \"./StripedDataGrid.jsx\"\r\n\r\nimport \"./Table.css\";\r\n\r\n// Load Project Summary Data from JSON\r\n// NOTE: Data wants an ID for some reason\r\nconst labelSummaries = []\r\n\r\nfor (let i = 0; i < LabelScores.count; i++) {\r\n    labelSummaries.push(LabelScores.entries[i])\r\n}\r\n\r\nconst columns = [\r\n    { field: 'id', hide: true},\r\n    {\r\n        field: 'label',\r\n        headerName: 'label',\r\n        minWidth: 90,\r\n        flex: 1,\r\n        editable: false\r\n    },\r\n    {\r\n        field: 'count',\r\n        headerName: 'Label Count',\r\n        minWidth: 50,\r\n        flex: 1,\r\n        editable: false,\r\n        type: 'number'\r\n    },\r\n    {\r\n        field: 'f1-score',\r\n        headerName: 'Mean F1-Score',\r\n        minWidth: 90,\r\n        flex: 1,\r\n        editable: false,\r\n        type: 'number'\r\n    },\r\n    {\r\n        field: 'standard-error',\r\n        headerName: 'Standard Error',\r\n        minWidth: 90,\r\n        flex: 1,\r\n        editable: false,\r\n        type: 'number'\r\n\r\n    },\r\n    {\r\n        field: 'lb-ci',\r\n        headerName: 'Lower Bound (95% CI)',\r\n        minWidth: 90,\r\n        flex: 1,\r\n        editable: false,\r\n        type: 'number'\r\n    },\r\n    {\r\n        field: 'ub-ci',\r\n        headerName: 'Upper Bound (95% CI)',\r\n        minWidth: 90,\r\n        flex: 1,\r\n        editable: false,\r\n        type: 'number'\r\n    }\r\n];\r\n\r\nconst LabelTable = () => {\r\n  return (\r\n    <div className='global-padding'>\r\n        <StripedDataGrid\r\n        hideFooter\r\n        autoHeight={true}\r\n        rows={labelSummaries}\r\n        columns={columns}\r\n        density=\"compact\"\r\n        getRowClassName={(params) =>\r\n            params.indexRelativeToCurrentPage % 2 === 0 ? 'even' : 'odd'\r\n        }\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LabelTable;","import React from 'react';\r\n\r\nimport ModelTable from '../components/ModelTable';\r\nimport LabelTable from '../components/LabelTable';\r\n\r\nimport './ModelResults.css';\r\n\r\nconst ModelResults = () => {\r\n  return (\r\n    <main className='table-container'>\r\n      <h2> 2023 MQP Model Data </h2>\r\n      <div>     \r\n        <ModelTable/>\r\n      </div>\r\n      <h2> 2023 MQP Model Data (By Label) </h2>\r\n      <div>\r\n        <LabelTable/>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ModelResults;","import React from 'react';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n    Page you are looking for is not found!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nconst { tableau } = window;\r\n\r\nfunction BasicEmbed() {\r\n  const ref = useRef(null)\r\n  const url = \"https://public.tableau.com/views/LearnEmbeddedAnalytics/SalesOverviewDashboard\";\r\n\r\n  function initViz() {\r\n    new tableau.Viz(ref.current, url);\r\n  };\r\n\r\n  useEffect(() => {\r\n    initViz();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <div ref={ref} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default BasicEmbed;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter as Router, Route, Routes} from 'react-router-dom';\n\nimport Header from './components/Header';\n\nimport Home from './pages/Home';\nimport ModelResults from './pages/ModelResults';\nimport About from './pages/About';\nimport NotFound from './pages/NotFound';\n\nimport BasicEmbed from './components/BasicEmbed';\n\nimport './index.css';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(\n  <React.StrictMode>\n    <Router basename=''>\n      <Header/>\n      <Routes>\n        {/* Base Routes */}\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/users\" element={<ModelResults />} />\n        <Route path=\"/about\" element={<BasicEmbed />}/>\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </Router>\n  </React.StrictMode>\n);"],"sourceRoot":""}